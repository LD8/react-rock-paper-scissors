{"version":3,"sources":["img/rock.png","img/paper.png","img/scissors.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","weapons","name","img","Rock","Paper","Scissors","Info","myChoice","id","Header","Footer","href","rel","target","App","props","hideRestSigns","choice","document","querySelectorAll","forEach","sign","style","visibility","top","revealSigns","cssText","game","setState","counter","setInterval","setComputerChoice","clearInterval","winner","evaluate","state","computerChoice","setTimeout","computerChoiceIndex","Math","floor","random","length","console","log","glow","myScore","computerScore","elem","getElementById","classList","add","remove","className","this","src","alt","map","weapon","key","onClick","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.92b7a14c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.f23b4798.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.19699e5a.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.5621f992.png\";","import React, { Component } from \"react\";\nimport Rock from \"./img/rock.png\";\nimport Paper from \"./img/paper.png\";\nimport Scissors from \"./img/scissors.png\";\n\nconst weapons = [\n  { name: \"Rock\", img: Rock },\n  { name: \"Paper\", img: Paper },\n  { name: \"Scissors\", img: Scissors }\n];\n\nfunction Info({ myChoice }) {\n  return (\n    <div>\n      <p id=\"info\">\n        {myChoice ? \"My choice was \" + myChoice : \"Make your move!\"}\n      </p>\n    </div>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myChoice: \"\",\n      computerChoice: \"\",\n      computerChoiceIndex: 0,\n      myScore: 0,\n      computerScore: 0,\n      winner: \"\"\n    };\n  }\n\n  hideRestSigns = choice => {\n    const signs = document.querySelectorAll(\".sign-box\");\n    signs.forEach(sign => {\n      // console.log(sign.id);\n      if (sign.id !== choice) {\n        sign.style.visibility = \"hidden\";\n      } else {\n        sign.style.top=\"-80px\"\n      }\n    });\n  };\n\n  revealSigns = () => {\n    const signs = document.querySelectorAll(\".sign-box\");\n    signs.forEach(sign => (sign.style.cssText = \"visibility: visible; top: 0;\"));\n  };\n  \n  game = choice => {\n    this.hideRestSigns(choice);\n    this.setState({ myChoice: choice });\n    let counter = 0;\n    const id = setInterval(() => {\n      counter++;\n      this.setComputerChoice();\n      if (counter > 4) {\n        clearInterval(id);\n\n        const winner = this.evaluate(\n          this.state.myChoice,\n          this.state.computerChoice\n        );\n        this.setState({\n          winner: winner\n        });\n      }\n    }, 100);\n    setTimeout(() => this.revealSigns(), 1800);\n  };\n\n  setComputerChoice = () => {\n    const computerChoiceIndex = Math.floor(Math.random() * weapons.length);\n    this.setState({\n      computerChoiceIndex: computerChoiceIndex,\n      computerChoice: weapons[computerChoiceIndex].name\n    });\n  };\n\n  evaluate = (myChoice, computerChoice) => {\n    if (myChoice === computerChoice) {\n      console.log(this.state);\n      this.glow(myChoice, \"draw-glow\");\n      return \"DRAW!\";\n    } else if (\n      (myChoice === \"Rock\" && computerChoice === \"Scissors\") ||\n      (myChoice === \"Scissors\" && computerChoice === \"Paper\") ||\n      (myChoice === \"Paper\" && computerChoice === \"Rock\")\n    ) {\n      this.setState({ myScore: this.state.myScore + 1 });\n      console.log(this.state);\n      this.glow(myChoice, \"win-glow\");\n      return \"I WIN!\";\n    } else {\n      this.setState({ computerScore: this.state.computerScore + 1 });\n      console.log(this.state);\n      this.glow(myChoice, \"lose-glow\");\n      return \"I LOST...\";\n    }\n  };\n\n  glow = (myChoice, glow) => {\n    const elem = document.getElementById(myChoice);\n    elem.classList.add(glow);\n    setTimeout(() => elem.classList.remove(glow), 500);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main>\n          <div id=\"scoreBoard\">\n            <p className=\"badge-left\">\n              <span>My Score</span>{\" \"}\n              <span id=\"myScore\">{this.state.myScore}</span>\n            </p>\n            <p className=\"badge-right\">\n              <span id=\"computerScore\">{this.state.computerScore}</span>{\" \"}\n              <span>Mac Score</span>\n            </p>\n          </div>\n\n          <div>\n            <p id=\"computerStatus\">\n              {this.state.myChoice ? (\n                <img id=\"computerStatusImgTag\"\n                  src={weapons[this.state.computerChoiceIndex].img}\n                  alt={\n                    weapons[this.state.computerChoiceIndex].name +\n                    \" for the game\"\n                  }\n                />\n              ) : null}\n            </p>\n            <hr />\n            <p id=\"myStatus\">\n              {/* {this.state.winner ? this.state.winner : \"Make your move!\"} */}\n              {/* {this.state.winner ? null : \"Make your move!\"} */}\n            </p>\n          </div>\n\n          <div className=\"sign-boxes\">\n            {weapons.map(weapon => {\n              return (\n                <div\n                  key={weapon.name}\n                  id={weapon.name}\n                  onClick={() => this.game(weapon.name)}\n                  className=\"sign-box\"\n                >\n                  <img src={weapon.img} alt={weapon.name + \" for the game\"} />\n                </div>\n              );\n            })}\n          </div>\n\n          <Info myChoice={this.state.myChoice} />\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Rock Paper Scissors</h1>\n    </header>\n  );\n}\nfunction Footer() {\n  return (\n    <footer>\n      <div>\n        <a\n          href=\"https://github.com/LD8\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          GitHub\n        </a>\n      </div>\n      <div>\n        <span>By </span>\n        <a\n          href=\"https://DonLee.online\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Don Lee\n        </a>\n      </div>\n    </footer>\n  );\n}\nexport default App;\n\n// game = choice => {\n//   this.setState({ myChoice: choice });\n//   this.setComputerChoice();\n\n//   const winner = this.evaluate(\n//     this.state.myChoice,\n//     this.state.computerChoice\n//   );\n//   this.setState({\n//     winner: winner\n//   });\n// };\n\n// game = choice => {\n//   this.setState({ myChoice: choice });\n//   this.setComputerChoice();\n\n//   setTimeout(\n//     () => this.evaluate(this.state.myChoice, this.state.computerChoice),\n//     5\n//   );\n// };\n\n// evaluate = (myChoice, computerChoice) => {\n//   if (myChoice === computerChoice) {\n//     console.log(this.state);\n//     this.setState({\n//       winner: \"DRAW!\"\n//     });\n//     this.glow(myChoice, \"draw-glow\");\n//   } else if (\n//     (myChoice === \"Rock\" && computerChoice === \"Scissors\") ||\n//     (myChoice === \"Scissors\" && computerChoice === \"Paper\") ||\n//     (myChoice === \"Paper\" && computerChoice === \"Rock\")\n//   ) {\n//     this.setState({ myScore: this.state.myScore + 1 });\n//     console.log(this.state);\n//     this.setState({\n//       winner: \"I WON!!\"\n//     });\n//     this.glow(myChoice, \"win-glow\");\n//   } else {\n//     this.setState({ computerScore: this.state.computerScore + 1 });\n//     console.log(this.state);\n//     this.setState({\n//       winner: \"I LOST...\"\n//     });\n//     this.glow(myChoice, \"lose-glow\");\n//   }\n// };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}